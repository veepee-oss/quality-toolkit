[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "quality-toolkit"
version = "2.5.4"
authors = [
    {name = "VpTech", email = "vptech@veepee.com"},
]
description = "Toolkit for the quality in order to help writing tests"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["Quality", "Toolkit", "Testing"]
dependencies = [
    "psycopg2-binary==2.9.11",
    "requests==2.32.5",
    "pytz==2025.2",
    "python-tds==1.17.1",
    "selenium==4.36.0",
    "python-keycloak-client==0.2.3",
    "pysftp==0.2.9",
    "playwright==1.55.0",
]

[project.urls]
Homepage = "https://github.com/veepee-oss/quality-toolkit"

[tool.setuptools.packages]
find = {}

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
# This command will be executed after the next version has been determined, and stamped into your files but before a release tag has been created.
build_command = "python -m build --sdist --wheel ."
commit_parser = "conventional"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.changelog.default_templates]
changelog_file = "./CHANGELOG.md"
output_format = "md"

[tool.semantic_release.branches.alpha]
# Matches branches with the prefixes 'feat/', 'fix/', or 'perf/'.
match = "^alpha$"
prerelease = true
prerelease_token = "alpha"

[tool.semantic_release.branches.beta]
# Matches branches with the prefixes 'feat/', 'fix/', or 'perf/'.
match = "^beta$"
prerelease = true
prerelease_token = "beta"
